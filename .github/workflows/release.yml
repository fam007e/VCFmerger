name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'  # Use a stable version compatible with Python 3.6+

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Determine binary name
      id: binary_name
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          echo "binary_name=vcf-merger.exe" >> $GITHUB_OUTPUT
        else
          echo "binary_name=vcf-merger" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Build binary with PyInstaller
      shell: bash
      run: |
        pyinstaller --name ${{ steps.binary_name.outputs.binary_name }} \
                    --onefile \
                    --console \
                    merge_script.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-binary
        path: dist/${{ steps.binary_name.outputs.binary_name }}
        if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Generate dynamic version
      id: version
      run: |
        DATE=$(date +%Y%m%d)
        COMMIT_HASH=$(git rev-parse --short=7 HEAD)
        VERSION="v${DATE}-${COMMIT_HASH}"
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Linux Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/ubuntu-latest-binary/vcf-merger
        asset_name: vcf-merger-linux-${{ steps.version.outputs.version }}
        asset_content_type: application/octet-stream

    - name: Upload macOS Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/macos-latest-binary/vcf-merger
        asset_name: vcf-merger-macos-${{ steps.version.outputs.version }}
        asset_content_type: application/octet-stream

    - name: Upload Windows Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/windows-latest-binary/vcf-merger.exe
        asset_name: vcf-merger-windows-${{ steps.version.outputs.version }}.exe
        asset_content_type: application/octet-stream
